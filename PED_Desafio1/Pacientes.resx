<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAAAAAAAD/2wBDAAkGBxITEhUSExMWFRUXGBgYFhUTGBgZFRYYFRIWGBUXGBUZ
        HSggGBomHRUXITEhJSkrLi4uFx8zODMtNygtLiv/2wBDAQoKCg4NDhsQEBstJSAlLS0tLS0tLS0tLS0t
        LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS3/wAARCADJAPsDAREAAhEBAxEB/8QA
        HAABAAIDAQEBAAAAAAAAAAAAAAUGAgMEBwEI/8QARRAAAgECAwQGBwQIBQMFAAAAAQIAAxEEEiEFBjFR
        EyJBYXGRBzJSgaGxwUJyktEVFiOCosLh8BQzU2KyY6PiNEOD0tP/xAAaAQEAAwEBAQAAAAAAAAAAAAAA
        AwQFAgEG/8QAMREAAgIBAwEGBgAHAQEAAAAAAAECAxEEITESBRQyQVFhEyJScYGhFSMzQmKRscHw/9oA
        DAMBAAIRAxEAPwD3GAIAgCAIAgCAIAgCAIAgCAIAgCAIAgCAIAgCAIAgCAIAgCAIAgCAIAgCAIAgCAIA
        gCAIAgCAIAgCAIAgCAIAgCAIAgCAIAgCAIAgCAIAgCAIAgCAIAgCAIAgCAIAgCAIAgCAIAgGFSqq8WA8
        SBPUm+DxtI0NtKiONWn+JfznXwp+jOfiQ9T4Np0P9Wn+Jfznvwp/Sx8SHqbqeJRvVdT4EGcuMlyj1ST4
        ZtnJ0IAgCAIAgCAIAgCAIAgCAIAgCAIAgCAYVKqrqzAeJA+c9Sb4PG0uTXTxtJjZaiE8gwJ+c9cJLlM8
        U4vhm+cnQgCADAIrG7wUaegOc8k1/i4SxXpbJ+WPuQT1EI+5B4reiq3qKqD8R8zp8JchoYLxPJXlqpPg
        jK+0az+tUY917DyGksRprjwiB2TfLOWSHAnoEA+WgG5MbVQdSoy+BNvLhOPhQk90j34ko8Mk8JvRiFtm
        QOPI+YFvhK89DW/C8E0dXNcrJYdnbepVdDdG9l9PJuBlG3TTh7r2LdeohP2JWVycQBAEAQBAEAQBAEAQ
        BAEAQDixe1qNP1qgvyU3PkJLCmc+ERythHllc2lvK76UuovP7R+gl6rRRW89ypZqW/DsQVRyxuxJPMm5
        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
        8xXVUrHiJGej/cfaWHapVSvQw5ZQmYoa72uGNluqrwGpv4CezuhYlg8lXKDwzi9IG7O2OievisTSxFGg
        GcZbIwGgJFNaYF7W+0ZJXOGcJbnDTOzcfdLbVJUeliqOHo1AKlrCq1nVTfo2TjYAeuJzZODecbnqzjBb
        sfvBitnBXx9XDVqDHL0tMGjXHM9AzMKoHEhGDW4KeEhUerg94LlTqBgGUgggEEaggi4IPKcnplAEAQBA
        EAQBAEAQBAEAQDg21siliqfRVb5cwbqmxuARx8CZ3Cbg8o5lFSWGdtNAoCjQAAAdwGk4OjTjvUbsuLec
        8aysHUXhpshXwrEZtL9tuB/IyB1N7+ZbjqIrbyJHC4lgoDan4+fbJo5xuVbHFy+Xgw2dsmnTQLTuEuTl
        OvrMWIvyuTJJScnlkaWODrfBqTfgZxg6y8YM6WHCm956eG6AIAgHPWwxJuD8IBrOEPtDy/rAOdWINwfM
        QDCumf1iTOZRUuTuFjhwdezlABAGn9/lPUklhHkpOTyyr+lyriBs2otCkanSEU6mVSzLScHMwUa3vYX7
        M1+ySV46tzh8El6PsTiKmz8O2Jp9HUylcpUqcqMVpsVOqkoFNu/s4TyaSex6ji3/ANxU2n0JNZqTUs4B
        ChgVqZcwKkjXqCxv5z2E3E8ayWXZeBWhRpUEuVpItNS2pIRQoueek45PTqgCAIAgCAIAgCAIAgCAIAgC
        AfGUHjrAPioBoAB4QB0Y5DygGUAQBAEAQBAEAEQDScKnL4mAP8KnL4mAZ06QXgLQDOAIAgCAIAgCAIAg
        CAIAgCAIAgCAIAgCAIAgCAIAgCAIAgCAIAgCAIAgCAIAgCAIAgCAIAgCAIAgCAIAgCAIAgCAIAgCAIAg
        CAIAgCAIAgCAIAgCAIAgCAIAgCAIAgCAIAgCAIAgCAIAgCAIAgCAIAgCAIAgCAIAgCAIAgCAIAgCAIAg
        CAf/2Q==
</value>
  </data>
</root>